util.AddNetworkString("PA_Dash") util.AddNetworkString("PA_DashUpdateCLVars") local dash_velocitymult = CreateConVar( "sv_dash_velocitymult", 1, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Velocity multiplier, 1 is default" ) local dash_midair = CreateConVar( "sv_dash_midair", 1, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Allow midair dashing" ) local dash_updash = CreateConVar( "sv_dash_updash", 1, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Allow dashing up" ) local dash_updashdistance = CreateConVar( "sv_dash_updashdistance", 1, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Upward dash distance multiplier, 1 is default" ) local dash_airdashlimit = CreateConVar( "sv_dash_airdashlimit", 0, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Restrict number of dashes midair, 0 is infinite" ) local dash_dodgedamage = CreateConVar( "sv_dash_dodgedamage", 2, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Should dashes block damage/heal?" ) local dash_dodgehealdivid = CreateConVar( "sv_dash_dodgehealdiv", 2, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Dodge healing divider, 2 is default" ) local dash_airvelocitymult = CreateConVar( "sv_dash_airvelocitymult", 1, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Velocity multiplier in air, 1 is default" ) local dash_timer = CreateConVar( "sv_dash_delay", 0.5, { FCVAR_ARCHIVE,FCVAR_NOTIFY }, "Dash Delay 0.5 is default" ) local dash_vcache=dash_velocitymult:GetFloat() local dash_mcache=dash_midair:GetBool() local dash_ucache=dash_updash:GetBool() local dash_acache=dash_airdashlimit:GetBool() net.Receive("PA_Dash",function(len,ply) if ply.DashLimitC>=dash_airdashlimit:GetInt() and dash_airdashlimit:GetInt()!=0 then return end local dashtype=net.ReadInt(32) local dashvelocity=dash_velocitymult:GetFloat() local dashmidair=dash_midair:GetBool() local dashupdash=dash_updash:GetBool() local dashupdashdistance=dash_updashdistance:GetFloat() local dashairvelocity=dash_airvelocitymult:GetFloat() if dashtype==1 then 	if !ply:OnGround() and dashmidair then 	ply:SetLocalVelocity(ply:GetVelocity()*Vector(1,1,0)+Vector(0,0,100)) 	ply:SetVelocity(-ply:GetRight()*500*dashvelocity*dashairvelocity) 	elseif ply:OnGround() then 	ply:SetVelocity(-ply:GetRight()*2000*dashvelocity) 	end 	ply:ViewPunch(Angle(1,0,-1.5)) elseif dashtype==2 then 	if !ply:OnGround() and dashmidair then 	ply:SetLocalVelocity(ply:GetVelocity()*Vector(1,1,0)+Vector(0,0,100)) 	ply:SetVelocity(ply:GetRight()*500*dashvelocity*dashairvelocity) 	elseif ply:OnGround() then 	ply:SetVelocity(ply:GetRight()*2000*dashvelocity) 	end 	ply:ViewPunch(Angle(1,0,1.5)) 	 elseif dashtype==3 then 	if (!ply:OnGround() and dashmidair) then 	ply:SetLocalVelocity(ply:GetVelocity()*Vector(1,1,0)+Vector(0,0,100)) 	ply:SetVelocity(ply:GetForward()*500*dashvelocity*dashairvelocity) 	elseif ply:OnGround() then 	ply:SetVelocity(ply:GetForward()*2000*dashvelocity) 	end 	ply:ViewPunch(Angle(2,0,0)) elseif dashtype==4 then 	if !ply:OnGround() and dashmidair then 	ply:SetLocalVelocity(ply:GetVelocity()*Vector(1,1,0)+Vector(0,0,100)) 	ply:SetVelocity(-ply:GetForward()*500*dashvelocity*dashairvelocity) 	elseif ply:OnGround() then 	ply:SetVelocity(-ply:GetForward()*2000*dashvelocity) 	end 	ply:ViewPunch(Angle(-2,0,0)) 	 elseif dashupdash then 	ply.UpDash=true 	ply.UpDashFalling=true 	ply.UpDashVelocity=10 	if ply:OnGround() then ply:SetPos(ply:GetPos()+Vector(0,0,1.25)) end 	ply:ViewPunch(Angle(2,0,0)) 	ply:SetLocalVelocity(ply:GetVelocity()*Vector(1,1,0)) 	ply:EmitSound("flyupwhoosh_"..tostring(math.random(1,4))..".wav") end ply.DashTimer=CurTime()+dash_timer:GetFloat() ply.DashLimitC=ply.DashLimitC+1 end) hook.Add("PlayerPostThink","PA_DashThink",function(ply) if ply.UpDashVelocity==nil then ply.UpDashVelocity=0 end if ply.UpDash==nil then ply.UpDash=false end if ply.DashTimer==nil then ply.DashTimer=0 end if ply.DashLimitC==nil then ply.DashLimitC=0 end if ply.UpDash then 	ply.UpDashVelocity=ply.UpDashVelocity+0.5 	ply:SetVelocity(Vector(0,0,ply.UpDashVelocity)) 	if ply.UpDashVelocity>=26.5*dash_updashdistance:GetFloat() then ply.UpDash=false end end if ply:OnGround() and ply.DashLimitC!=0 then ply.DashLimitC=0 end end) hook.Add("EntityTakeDamage","PA_DashFallDamage",function(ply,dmg) if ply:IsPlayer() then if dmg:IsFallDamage() and ply.UpDashFalling then ply.UpDashFalling=false return true end if ply.DashTimer>=CurTime() and dash_dodgedamage:GetInt()>=1 then if dash_dodgedamage:GetInt()>=2 then ply:SetHealth(math.Clamp(ply:Health()+(dmg:GetDamage()/(dash_dodgehealdivid:GetFloat())),0,ply:GetMaxHealth())) end return true end end end) hook.Add("Think","PA_DashUpdateCLVars",function() local first=dash_velocitymult:GetFloat() local second=dash_midair:GetBool() local third=dash_updash:GetBool() local fourth=dash_airdashlimit:GetInt() local fifth=dash_timer:GetFloat() if dash_vcache!=first or dash_mcache!=second or dash_ucache!=third or dash_acache!=fourth or dash_vacache!=fifth then 	net.Start("PA_DashUpdateCLVars") 	net.WriteFloat(dash_velocitymult:GetFloat()) 	net.WriteBool(dash_midair:GetFloat()) 	net.WriteBool(dash_updash:GetBool()) 	net.WriteInt(dash_airdashlimit:GetInt(),32) 	net.WriteFloat(dash_timer:GetFloat()) 	net.Broadcast() 	print("Broadcasting new convar to all clients") end dash_vcache=first dash_mcache=second dash_ucache=third dash_acache=fourth dash_vacache=fifth end) hook.Add("PlayerInitialSpawn","PA_DashUpdateNewClient",function(ply) 	net.Start("PA_DashUpdateCLVars") 	net.WriteFloat(dash_velocitymult:GetFloat()) 	net.WriteBool(dash_midair:GetFloat()) 	net.WriteBool(dash_updash:GetBool()) 	net.WriteInt(dash_airdashlimit:GetInt(),32) 	net.WriteFloat(dash_timer:GetFloat()) 	net.Send(ply) end) hook.Add("PlayerFootstep","PA_DashFootsteps",function(ply,pos,foot,sound) if ply.DashTimer>CurTime() then return true end end)